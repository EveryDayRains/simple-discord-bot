const { Embed, Command } = require('discore.js');

class MyCommand extends Command {
    get options() {
        return {
            enabled: true,
            name: 'clean',
            aliases: ['clear', 'purge', 'prune','del','—É–±–∏—Ç—å—á—Ç–æ–±—ã—Å–ª–µ—Ç–µ–ª–∞—á–ª–µ–Ω–æ—Å–æ—Å–∞–ª—å–Ω—è','ü§°'],
            description: '–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç',
            usage: '<–∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π> [@user/ID]'
        };
    }

    get customOptions() {
        return {
            tier: 3,
            category: "moderation"
        };
    }

    async run(message, args) {
        if(utils.check(message.member, 3) == false)
            return utils.error(message, 'INVALID_USER_TIER', { tier: this.customOptions.tier });

        let amount = parseInt(args.shift());
        if(!amount)
            return utils.error(message, 'NO_ARGS', { usage: `${this.client.config.guild.get(message.guild.id).prefix + this.options.name} ${this.options.usage}` });
        
        if(amount > 1000)
            return utils.error(message, 'USER_HAS_YOUR_TIER', { message: '–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –±–æ–ª–µ–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π.' });

        const userArg = args.shift();
        const user = message.guild.member(message.mentions.users.first() || message.guild.members.cache.get(userArg));
        
        if(user && (utils.check(user, 2) == true || utils.check(user, 3) == true))
            return utils.error(message, 'USER_HAS_YOUR_TIER', { message: `–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–æ–º **${utils.tiers[3]}**/**${utils.tiers[4]}**.` });

        if(user && user.id == message.author.id)
            return utils.error(message, 'USER_HAS_YOUR_TIER', { message: `–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–µ–±—è.` });

        let deleted = 0;
        while (deleted !== amount) {
            let messages = await message.channel.messages.fetch({ limit: 100 });
            if (user) messages = messages.filter(msg => msg.author.id === user.id);
            messages = messages
                .map(m => m.id)
                .filter(m => m !== message.id)
                .slice(0, amount - deleted);
            
            await message.channel.bulkDelete(messages);
            if (messages.length < 1) break;
            deleted += messages.length;
        }
        
        const displayText = utils.fridaySnippet(amount, '—Å–æ–æ–±—â–µ–Ω–∏–µ', '—Å–æ–æ–±—â–µ–Ω–∏—è', '—Å–æ–æ–±—â–µ–Ω–∏–π');
        let embed = new Embed()
            .setColor('#00FF00')
            .setDescription(`:white_check_mark: ${message.author} –æ—á–∏—Å—Ç–∏–ª —á–∞—Ç${user ? ` –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user} (ID: ${user.user.id})` : ''}.`)
            .addField('–ö–æ–ª-–≤–æ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π', `${amount} ${displayText}`);

        return message.channel.send(embed);
    }
};

module.exports = MyCommand;
